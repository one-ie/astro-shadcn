---
import Layout from "@/layouts/Layout.astro";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { Label } from "@/components/ui/label";
import { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from "@/components/ui/card";

export const prerender = false;

// Redirect if already logged in
if (Astro.locals.user) {
  return Astro.redirect("/dashboard");
}
---

<Layout title="Sign Up">
  <main class="min-h-screen flex items-center justify-center bg-gradient-to-br from-background to-secondary/10 p-4">
    <Card className="w-full max-w-md">
      <CardHeader>
        <CardTitle className="text-2xl">Create Account</CardTitle>
        <CardDescription>Sign up to get started</CardDescription>
      </CardHeader>
      <CardContent>
        <form id="signup-form" class="space-y-4">
          <div class="space-y-2">
            <Label htmlFor="name">Name</Label>
            <Input id="name" name="name" type="text" placeholder="Your name" />
          </div>

          <div class="space-y-2">
            <Label htmlFor="email">Email</Label>
            <Input id="email" name="email" type="email" placeholder="your@email.com" required />
          </div>

          <div class="space-y-2">
            <Label htmlFor="password">Password</Label>
            <Input id="password" name="password" type="password" placeholder="••••••••" required minLength={8} />
            <p class="text-xs text-muted-foreground">Minimum 8 characters</p>
          </div>

          <div id="error-message" class="hidden text-sm text-destructive"></div>

          <Button type="submit" className="w-full">
            Sign Up
          </Button>
        </form>

        <div class="relative my-6">
          <div class="absolute inset-0 flex items-center">
            <div class="w-full border-t"></div>
          </div>
          <div class="relative flex justify-center text-sm">
            <span class="bg-card px-2 text-muted-foreground">Or continue with</span>
          </div>
        </div>

        <div class="grid grid-cols-2 gap-3">
          <Button variant="outline" asChild>
            <a href="/api/auth/github" class="flex items-center gap-2">
              <svg class="h-5 w-5" viewBox="0 0 24 24" fill="currentColor">
                <path d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.840 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.430.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z"/>
              </svg>
              GitHub
            </a>
          </Button>
          <Button variant="outline" asChild>
            <a href="/api/auth/google" class="flex items-center gap-2">
              <svg class="h-5 w-5" viewBox="0 0 24 24">
                <path fill="#4285F4" d="M22.56 12.25c0-.78-.07-1.53-.2-2.25H12v4.26h5.92c-.26 1.37-1.04 2.53-2.21 3.31v2.77h3.57c2.08-1.92 3.28-4.74 3.28-8.09z"/>
                <path fill="#34A853" d="M12 23c2.97 0 5.46-.98 7.28-2.66l-3.57-2.77c-.98.66-2.23 1.06-3.71 1.06-2.86 0-5.29-1.93-6.16-4.53H2.18v2.84C3.99 20.53 7.7 23 12 23z"/>
                <path fill="#FBBC05" d="M5.84 14.09c-.22-.66-.35-1.36-.35-2.09s.13-1.43.35-2.09V7.07H2.18C1.43 8.55 1 10.22 1 12s.43 3.45 1.18 4.93l2.85-2.22.81-.62z"/>
                <path fill="#EA4335" d="M12 5.38c1.62 0 3.06.56 4.21 1.64l3.15-3.15C17.45 2.09 14.97 1 12 1 7.7 1 3.99 3.47 2.18 7.07l3.66 2.84c.87-2.6 3.3-4.53 6.16-4.53z"/>
              </svg>
              Google
            </a>
          </Button>
        </div>
      </CardContent>
      <CardFooter className="flex justify-center">
        <p class="text-sm text-muted-foreground">
          Already have an account? <a href="/login" class="text-primary hover:underline">Sign in</a>
        </p>
      </CardFooter>
    </Card>
  </main>
</Layout>

<script>
  import { ConvexHttpClient } from "convex/browser";
  import { api } from "../../convex/_generated/api";

  const convexUrl = import.meta.env.PUBLIC_CONVEX_URL || import.meta.env.NEXT_PUBLIC_CONVEX_URL;
  const client = new ConvexHttpClient(convexUrl);

  document.addEventListener("DOMContentLoaded", () => {
    const form = document.getElementById("signup-form") as HTMLFormElement;
    const errorDiv = document.getElementById("error-message") as HTMLDivElement;

    if (!form || !errorDiv) return;

    form.addEventListener("submit", async (e) => {
      e.preventDefault();
      errorDiv.classList.add("hidden");

      const formData = new FormData(form);
      const email = formData.get("email") as string;
      const password = formData.get("password") as string;
      const name = formData.get("name") as string;

      try {
        const result = await client.mutation(api.auth.signUp, {
          email,
          password,
          name: name || undefined,
        });

        // Submit token to server to set secure cookie
        const response = await fetch("/api/auth/set-cookie", {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify({ token: result.token }),
        });

        if (response.ok) {
          window.location.href = "/dashboard";
        } else {
          throw new Error("Failed to set authentication cookie");
        }
      } catch (error: any) {
        errorDiv.textContent = error.message || "Sign up failed. Please try again.";
        errorDiv.classList.remove("hidden");
      }
    });
  });
</script>
